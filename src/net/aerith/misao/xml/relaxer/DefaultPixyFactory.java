package net.aerith.misao.xml.relaxer;

import org.w3c.dom.*;

/**
 * DefaultPixyFactory is generated by Relaxer based on pixy.rlx.
 *
 * @version pixy.rlx (Tue Nov 23 20:34:02 JST 2004)
 * @author  Relaxer 0.10.1 (by ASAMI@Yokohama)
 */
public class DefaultPixyFactory extends AbstractPixyFactory {

    /**
     * Creates a default <code>XmlPixy</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlPixy
     */
    public XmlPixy createXmlPixy() {
        return (new XmlPixy());
    }

    /**
     * Creates a default <code>XmlReport</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlReport
     */
    public XmlReport createXmlReport() {
        return (new XmlReport());
    }

    /**
     * Creates a default <code>XmlSystem</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlSystem
     */
    public XmlSystem createXmlSystem() {
        return (new XmlSystem());
    }

    /**
     * Creates a default <code>XmlInformation</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlInformation
     */
    public XmlInformation createXmlInformation() {
        return (new XmlInformation());
    }

    /**
     * Creates a default <code>XmlImage</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlImage
     */
    public XmlImage createXmlImage() {
        return (new XmlImage());
    }

    /**
     * Creates a default <code>XmlSize</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlSize
     */
    public XmlSize createXmlSize() {
        return (new XmlSize());
    }

    /**
     * Creates a default <code>XmlExposure</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlExposure
     */
    public XmlExposure createXmlExposure() {
        return (new XmlExposure());
    }

    /**
     * Creates a default <code>XmlCenter</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlCenter
     */
    public XmlCenter createXmlCenter() {
        return (new XmlCenter());
    }

    /**
     * Creates a default <code>XmlFov</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlFov
     */
    public XmlFov createXmlFov() {
        return (new XmlFov());
    }

    /**
     * Creates a default <code>XmlRotation</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlRotation
     */
    public XmlRotation createXmlRotation() {
        return (new XmlRotation());
    }

    /**
     * Creates a default <code>XmlPixelSize</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlPixelSize
     */
    public XmlPixelSize createXmlPixelSize() {
        return (new XmlPixelSize());
    }

    /**
     * Creates a default <code>XmlAstrometricError</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlAstrometricError
     */
    public XmlAstrometricError createXmlAstrometricError() {
        return (new XmlAstrometricError());
    }

    /**
     * Creates a default <code>XmlDistortionField</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlDistortionField
     */
    public XmlDistortionField createXmlDistortionField() {
        return (new XmlDistortionField());
    }

    /**
     * Creates a default <code>XmlAstrometry</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlAstrometry
     */
    public XmlAstrometry createXmlAstrometry() {
        return (new XmlAstrometry());
    }

    /**
     * Creates a default <code>XmlCatalog</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlCatalog
     */
    public XmlCatalog createXmlCatalog() {
        return (new XmlCatalog());
    }

    /**
     * Creates a default <code>XmlPhotometry</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlPhotometry
     */
    public XmlPhotometry createXmlPhotometry() {
        return (new XmlPhotometry());
    }

    /**
     * Creates a default <code>XmlReversedImage</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlReversedImage
     */
    public XmlReversedImage createXmlReversedImage() {
        return (new XmlReversedImage());
    }

    /**
     * Creates a default <code>XmlSbigImage</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlSbigImage
     */
    public XmlSbigImage createXmlSbigImage() {
        return (new XmlSbigImage());
    }

    /**
     * Creates a default <code>XmlUnofficial</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlUnofficial
     */
    public XmlUnofficial createXmlUnofficial() {
        return (new XmlUnofficial());
    }

    /**
     * Creates a default <code>XmlStarCount</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlStarCount
     */
    public XmlStarCount createXmlStarCount() {
        return (new XmlStarCount());
    }

    /**
     * Creates a default <code>XmlData</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlData
     */
    public XmlData createXmlData() {
        return (new XmlData());
    }

    /**
     * Creates a default <code>XmlStar</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlStar
     */
    public XmlStar createXmlStar() {
        return (new XmlStar());
    }

    /**
     * Creates a default <code>XmlRecord</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlRecord
     */
    public XmlRecord createXmlRecord() {
        return (new XmlRecord());
    }

    /**
     * Creates a default <code>XmlCoor</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlCoor
     */
    public XmlCoor createXmlCoor() {
        return (new XmlCoor());
    }

    /**
     * Creates a default <code>XmlPosition</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlPosition
     */
    public XmlPosition createXmlPosition() {
        return (new XmlPosition());
    }

    /**
     * Creates a default <code>XmlItem</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlItem
     */
    public XmlItem createXmlItem() {
        return (new XmlItem());
    }

    /**
     * Creates a default <code>XmlBatch</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlBatch
     */
    public XmlBatch createXmlBatch() {
        return (new XmlBatch());
    }

    /**
     * Creates a default <code>XmlInstruction</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlInstruction
     */
    public XmlInstruction createXmlInstruction() {
        return (new XmlInstruction());
    }

    /**
     * Creates a default <code>XmlBaseCatalog</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlBaseCatalog
     */
    public XmlBaseCatalog createXmlBaseCatalog() {
        return (new XmlBaseCatalog());
    }

    /**
     * Creates a default <code>XmlOutput</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlOutput
     */
    public XmlOutput createXmlOutput() {
        return (new XmlOutput());
    }

    /**
     * Creates a default <code>XmlInformationHolder</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlInformationHolder
     */
    public XmlInformationHolder createXmlInformationHolder() {
        return (new XmlInformationHolder());
    }

    /**
     * Creates a default <code>XmlRecordHolder</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlRecordHolder
     */
    public XmlRecordHolder createXmlRecordHolder() {
        return (new XmlRecordHolder());
    }

    /**
     * Creates a default <code>XmlMagRecordHolder</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlMagRecordHolder
     */
    public XmlMagRecordHolder createXmlMagRecordHolder() {
        return (new XmlMagRecordHolder());
    }

    /**
     * Creates a default <code>XmlMagRecord</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlMagRecord
     */
    public XmlMagRecord createXmlMagRecord() {
        return (new XmlMagRecord());
    }

    /**
     * Creates a default <code>XmlMag</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlMag
     */
    public XmlMag createXmlMag() {
        return (new XmlMag());
    }

    /**
     * Creates a default <code>XmlReported</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlReported
     */
    public XmlReported createXmlReported() {
        return (new XmlReported());
    }

    /**
     * Creates a default <code>XmlDiscarded</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlDiscarded
     */
    public XmlDiscarded createXmlDiscarded() {
        return (new XmlDiscarded());
    }

    /**
     * Creates a default <code>XmlPreempted</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlPreempted
     */
    public XmlPreempted createXmlPreempted() {
        return (new XmlPreempted());
    }

    /**
     * Creates a default <code>XmlImported</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlImported
     */
    public XmlImported createXmlImported() {
        return (new XmlImported());
    }

    /**
     * Creates a default <code>XmlBlending</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlBlending
     */
    public XmlBlending createXmlBlending() {
        return (new XmlBlending());
    }

    /**
     * Creates a default <code>XmlPositionRecordHolder</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlPositionRecordHolder
     */
    public XmlPositionRecordHolder createXmlPositionRecordHolder() {
        return (new XmlPositionRecordHolder());
    }

    /**
     * Creates a default <code>XmlPositionRecord</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlPositionRecord
     */
    public XmlPositionRecord createXmlPositionRecord() {
        return (new XmlPositionRecord());
    }

    /**
     * Creates a default <code>XmlVariabilityHolder</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlVariabilityHolder
     */
    public XmlVariabilityHolder createXmlVariabilityHolder() {
        return (new XmlVariabilityHolder());
    }

    /**
     * Creates a default <code>XmlVariability</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlVariability
     */
    public XmlVariability createXmlVariability() {
        return (new XmlVariability());
    }

    /**
     * Creates a default <code>XmlConfiguration</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlConfiguration
     */
    public XmlConfiguration createXmlConfiguration() {
        return (new XmlConfiguration());
    }

    /**
     * Creates a default <code>XmlCatalogPath</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlCatalogPath
     */
    public XmlCatalogPath createXmlCatalogPath() {
        return (new XmlCatalogPath());
    }

    /**
     * Creates a default <code>XmlImageConfig</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return XmlImageConfig
     */
    public XmlImageConfig createXmlImageConfig() {
        return (new XmlImageConfig());
    }

    /**
     * Creates a default <code>RContext</code>.
     * This method is a hook method of the AbstractPixyFactory.
     *
     * @return RContext
     */
    public RContext createRContext() {
        return (new RContext());
    }

    /**
     * Creates an array of <code>XmlBlending</code>.
     *
     * @return XmlBlending[]
     */
    public XmlBlending[] createArrayXmlBlending(int size) {
        return new XmlBlending[size];
    }

    /**
     * Creates an array of <code>XmlCatalogPath</code>.
     *
     * @return XmlCatalogPath[]
     */
    public XmlCatalogPath[] createArrayXmlCatalogPath(int size) {
        return new XmlCatalogPath[size];
    }

    /**
     * Creates an array of <code>XmlInformation</code>.
     *
     * @return XmlInformation[]
     */
    public XmlInformation[] createArrayXmlInformation(int size) {
        return new XmlInformation[size];
    }

    /**
     * Creates an array of <code>XmlInstruction</code>.
     *
     * @return XmlInstruction[]
     */
    public XmlInstruction[] createArrayXmlInstruction(int size) {
        return new XmlInstruction[size];
    }

    /**
     * Creates an array of <code>XmlItem</code>.
     *
     * @return XmlItem[]
     */
    public XmlItem[] createArrayXmlItem(int size) {
        return new XmlItem[size];
    }

    /**
     * Creates an array of <code>XmlMagRecord</code>.
     *
     * @return XmlMagRecord[]
     */
    public XmlMagRecord[] createArrayXmlMagRecord(int size) {
        return new XmlMagRecord[size];
    }

    /**
     * Creates an array of <code>XmlOutput</code>.
     *
     * @return XmlOutput[]
     */
    public XmlOutput[] createArrayXmlOutput(int size) {
        return new XmlOutput[size];
    }

    /**
     * Creates an array of <code>XmlPositionRecord</code>.
     *
     * @return XmlPositionRecord[]
     */
    public XmlPositionRecord[] createArrayXmlPositionRecord(int size) {
        return new XmlPositionRecord[size];
    }

    /**
     * Creates an array of <code>XmlRecord</code>.
     *
     * @return XmlRecord[]
     */
    public XmlRecord[] createArrayXmlRecord(int size) {
        return new XmlRecord[size];
    }

    /**
     * Creates an array of <code>XmlReported</code>.
     *
     * @return XmlReported[]
     */
    public XmlReported[] createArrayXmlReported(int size) {
        return new XmlReported[size];
    }

    /**
     * Creates an array of <code>XmlStar</code>.
     *
     * @return XmlStar[]
     */
    public XmlStar[] createArrayXmlStar(int size) {
        return new XmlStar[size];
    }

    /**
     * Creates an array of <code>XmlVariability</code>.
     *
     * @return XmlVariability[]
     */
    public XmlVariability[] createArrayXmlVariability(int size) {
        return new XmlVariability[size];
    }
}
