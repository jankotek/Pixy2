package net.aerith.misao.xml.relaxer;

import org.w3c.dom.*;

/**
 * IPixyFactory is generated by Relaxer based on pixy.rlx.
 *
 * @version pixy.rlx (Tue Nov 23 20:34:02 JST 2004)
 * @author  Relaxer 0.10.1 (by ASAMI@Yokohama)
 */
public interface IPixyFactory {
    /**
     * Creates a <code>XmlPixy</code>.
     *
     * @return XmlPixy
     */
    XmlPixy createXmlPixy();

    /**
     * Creates a <code>XmlReport</code>.
     *
     * @return XmlReport
     */
    XmlReport createXmlReport();

    /**
     * Creates a <code>XmlSystem</code>.
     *
     * @return XmlSystem
     */
    XmlSystem createXmlSystem();

    /**
     * Creates a <code>XmlInformation</code>.
     *
     * @return XmlInformation
     */
    XmlInformation createXmlInformation();

    /**
     * Creates a <code>XmlImage</code>.
     *
     * @return XmlImage
     */
    XmlImage createXmlImage();

    /**
     * Creates a <code>XmlSize</code>.
     *
     * @return XmlSize
     */
    XmlSize createXmlSize();

    /**
     * Creates a <code>XmlExposure</code>.
     *
     * @return XmlExposure
     */
    XmlExposure createXmlExposure();

    /**
     * Creates a <code>XmlCenter</code>.
     *
     * @return XmlCenter
     */
    XmlCenter createXmlCenter();

    /**
     * Creates a <code>XmlFov</code>.
     *
     * @return XmlFov
     */
    XmlFov createXmlFov();

    /**
     * Creates a <code>XmlRotation</code>.
     *
     * @return XmlRotation
     */
    XmlRotation createXmlRotation();

    /**
     * Creates a <code>XmlPixelSize</code>.
     *
     * @return XmlPixelSize
     */
    XmlPixelSize createXmlPixelSize();

    /**
     * Creates a <code>XmlAstrometricError</code>.
     *
     * @return XmlAstrometricError
     */
    XmlAstrometricError createXmlAstrometricError();

    /**
     * Creates a <code>XmlDistortionField</code>.
     *
     * @return XmlDistortionField
     */
    XmlDistortionField createXmlDistortionField();

    /**
     * Creates a <code>XmlAstrometry</code>.
     *
     * @return XmlAstrometry
     */
    XmlAstrometry createXmlAstrometry();

    /**
     * Creates a <code>XmlCatalog</code>.
     *
     * @return XmlCatalog
     */
    XmlCatalog createXmlCatalog();

    /**
     * Creates a <code>XmlPhotometry</code>.
     *
     * @return XmlPhotometry
     */
    XmlPhotometry createXmlPhotometry();

    /**
     * Creates a <code>XmlReversedImage</code>.
     *
     * @return XmlReversedImage
     */
    XmlReversedImage createXmlReversedImage();

    /**
     * Creates a <code>XmlSbigImage</code>.
     *
     * @return XmlSbigImage
     */
    XmlSbigImage createXmlSbigImage();

    /**
     * Creates a <code>XmlUnofficial</code>.
     *
     * @return XmlUnofficial
     */
    XmlUnofficial createXmlUnofficial();

    /**
     * Creates a <code>XmlStarCount</code>.
     *
     * @return XmlStarCount
     */
    XmlStarCount createXmlStarCount();

    /**
     * Creates a <code>XmlData</code>.
     *
     * @return XmlData
     */
    XmlData createXmlData();

    /**
     * Creates a <code>XmlStar</code>.
     *
     * @return XmlStar
     */
    XmlStar createXmlStar();

    /**
     * Creates a <code>XmlRecord</code>.
     *
     * @return XmlRecord
     */
    XmlRecord createXmlRecord();

    /**
     * Creates a <code>XmlCoor</code>.
     *
     * @return XmlCoor
     */
    XmlCoor createXmlCoor();

    /**
     * Creates a <code>XmlPosition</code>.
     *
     * @return XmlPosition
     */
    XmlPosition createXmlPosition();

    /**
     * Creates a <code>XmlItem</code>.
     *
     * @return XmlItem
     */
    XmlItem createXmlItem();

    /**
     * Creates a <code>XmlBatch</code>.
     *
     * @return XmlBatch
     */
    XmlBatch createXmlBatch();

    /**
     * Creates a <code>XmlInstruction</code>.
     *
     * @return XmlInstruction
     */
    XmlInstruction createXmlInstruction();

    /**
     * Creates a <code>XmlBaseCatalog</code>.
     *
     * @return XmlBaseCatalog
     */
    XmlBaseCatalog createXmlBaseCatalog();

    /**
     * Creates a <code>XmlOutput</code>.
     *
     * @return XmlOutput
     */
    XmlOutput createXmlOutput();

    /**
     * Creates a <code>XmlInformationHolder</code>.
     *
     * @return XmlInformationHolder
     */
    XmlInformationHolder createXmlInformationHolder();

    /**
     * Creates a <code>XmlRecordHolder</code>.
     *
     * @return XmlRecordHolder
     */
    XmlRecordHolder createXmlRecordHolder();

    /**
     * Creates a <code>XmlMagRecordHolder</code>.
     *
     * @return XmlMagRecordHolder
     */
    XmlMagRecordHolder createXmlMagRecordHolder();

    /**
     * Creates a <code>XmlMagRecord</code>.
     *
     * @return XmlMagRecord
     */
    XmlMagRecord createXmlMagRecord();

    /**
     * Creates a <code>XmlMag</code>.
     *
     * @return XmlMag
     */
    XmlMag createXmlMag();

    /**
     * Creates a <code>XmlReported</code>.
     *
     * @return XmlReported
     */
    XmlReported createXmlReported();

    /**
     * Creates a <code>XmlDiscarded</code>.
     *
     * @return XmlDiscarded
     */
    XmlDiscarded createXmlDiscarded();

    /**
     * Creates a <code>XmlPreempted</code>.
     *
     * @return XmlPreempted
     */
    XmlPreempted createXmlPreempted();

    /**
     * Creates a <code>XmlImported</code>.
     *
     * @return XmlImported
     */
    XmlImported createXmlImported();

    /**
     * Creates a <code>XmlBlending</code>.
     *
     * @return XmlBlending
     */
    XmlBlending createXmlBlending();

    /**
     * Creates a <code>XmlPositionRecordHolder</code>.
     *
     * @return XmlPositionRecordHolder
     */
    XmlPositionRecordHolder createXmlPositionRecordHolder();

    /**
     * Creates a <code>XmlPositionRecord</code>.
     *
     * @return XmlPositionRecord
     */
    XmlPositionRecord createXmlPositionRecord();

    /**
     * Creates a <code>XmlVariabilityHolder</code>.
     *
     * @return XmlVariabilityHolder
     */
    XmlVariabilityHolder createXmlVariabilityHolder();

    /**
     * Creates a <code>XmlVariability</code>.
     *
     * @return XmlVariability
     */
    XmlVariability createXmlVariability();

    /**
     * Creates a <code>XmlConfiguration</code>.
     *
     * @return XmlConfiguration
     */
    XmlConfiguration createXmlConfiguration();

    /**
     * Creates a <code>XmlCatalogPath</code>.
     *
     * @return XmlCatalogPath
     */
    XmlCatalogPath createXmlCatalogPath();

    /**
     * Creates a <code>XmlImageConfig</code>.
     *
     * @return XmlImageConfig
     */
    XmlImageConfig createXmlImageConfig();

    /**
     * Creates a <code>XmlPixy</code>.
     *
     * @return XmlPixy
     */
    XmlPixy createXmlPixyWithContext();

    /**
     * Creates a <code>XmlReport</code>.
     *
     * @return XmlReport
     */
    XmlReport createXmlReportWithContext();

    /**
     * Creates a <code>XmlSystem</code>.
     *
     * @return XmlSystem
     */
    XmlSystem createXmlSystemWithContext();

    /**
     * Creates a <code>XmlInformation</code>.
     *
     * @return XmlInformation
     */
    XmlInformation createXmlInformationWithContext();

    /**
     * Creates a <code>XmlImage</code>.
     *
     * @return XmlImage
     */
    XmlImage createXmlImageWithContext();

    /**
     * Creates a <code>XmlSize</code>.
     *
     * @return XmlSize
     */
    XmlSize createXmlSizeWithContext();

    /**
     * Creates a <code>XmlExposure</code>.
     *
     * @return XmlExposure
     */
    XmlExposure createXmlExposureWithContext();

    /**
     * Creates a <code>XmlCenter</code>.
     *
     * @return XmlCenter
     */
    XmlCenter createXmlCenterWithContext();

    /**
     * Creates a <code>XmlFov</code>.
     *
     * @return XmlFov
     */
    XmlFov createXmlFovWithContext();

    /**
     * Creates a <code>XmlRotation</code>.
     *
     * @return XmlRotation
     */
    XmlRotation createXmlRotationWithContext();

    /**
     * Creates a <code>XmlPixelSize</code>.
     *
     * @return XmlPixelSize
     */
    XmlPixelSize createXmlPixelSizeWithContext();

    /**
     * Creates a <code>XmlAstrometricError</code>.
     *
     * @return XmlAstrometricError
     */
    XmlAstrometricError createXmlAstrometricErrorWithContext();

    /**
     * Creates a <code>XmlDistortionField</code>.
     *
     * @return XmlDistortionField
     */
    XmlDistortionField createXmlDistortionFieldWithContext();

    /**
     * Creates a <code>XmlAstrometry</code>.
     *
     * @return XmlAstrometry
     */
    XmlAstrometry createXmlAstrometryWithContext();

    /**
     * Creates a <code>XmlCatalog</code>.
     *
     * @return XmlCatalog
     */
    XmlCatalog createXmlCatalogWithContext();

    /**
     * Creates a <code>XmlPhotometry</code>.
     *
     * @return XmlPhotometry
     */
    XmlPhotometry createXmlPhotometryWithContext();

    /**
     * Creates a <code>XmlReversedImage</code>.
     *
     * @return XmlReversedImage
     */
    XmlReversedImage createXmlReversedImageWithContext();

    /**
     * Creates a <code>XmlSbigImage</code>.
     *
     * @return XmlSbigImage
     */
    XmlSbigImage createXmlSbigImageWithContext();

    /**
     * Creates a <code>XmlUnofficial</code>.
     *
     * @return XmlUnofficial
     */
    XmlUnofficial createXmlUnofficialWithContext();

    /**
     * Creates a <code>XmlStarCount</code>.
     *
     * @return XmlStarCount
     */
    XmlStarCount createXmlStarCountWithContext();

    /**
     * Creates a <code>XmlData</code>.
     *
     * @return XmlData
     */
    XmlData createXmlDataWithContext();

    /**
     * Creates a <code>XmlStar</code>.
     *
     * @return XmlStar
     */
    XmlStar createXmlStarWithContext();

    /**
     * Creates a <code>XmlRecord</code>.
     *
     * @return XmlRecord
     */
    XmlRecord createXmlRecordWithContext();

    /**
     * Creates a <code>XmlCoor</code>.
     *
     * @return XmlCoor
     */
    XmlCoor createXmlCoorWithContext();

    /**
     * Creates a <code>XmlPosition</code>.
     *
     * @return XmlPosition
     */
    XmlPosition createXmlPositionWithContext();

    /**
     * Creates a <code>XmlItem</code>.
     *
     * @return XmlItem
     */
    XmlItem createXmlItemWithContext();

    /**
     * Creates a <code>XmlBatch</code>.
     *
     * @return XmlBatch
     */
    XmlBatch createXmlBatchWithContext();

    /**
     * Creates a <code>XmlInstruction</code>.
     *
     * @return XmlInstruction
     */
    XmlInstruction createXmlInstructionWithContext();

    /**
     * Creates a <code>XmlBaseCatalog</code>.
     *
     * @return XmlBaseCatalog
     */
    XmlBaseCatalog createXmlBaseCatalogWithContext();

    /**
     * Creates a <code>XmlOutput</code>.
     *
     * @return XmlOutput
     */
    XmlOutput createXmlOutputWithContext();

    /**
     * Creates a <code>XmlInformationHolder</code>.
     *
     * @return XmlInformationHolder
     */
    XmlInformationHolder createXmlInformationHolderWithContext();

    /**
     * Creates a <code>XmlRecordHolder</code>.
     *
     * @return XmlRecordHolder
     */
    XmlRecordHolder createXmlRecordHolderWithContext();

    /**
     * Creates a <code>XmlMagRecordHolder</code>.
     *
     * @return XmlMagRecordHolder
     */
    XmlMagRecordHolder createXmlMagRecordHolderWithContext();

    /**
     * Creates a <code>XmlMagRecord</code>.
     *
     * @return XmlMagRecord
     */
    XmlMagRecord createXmlMagRecordWithContext();

    /**
     * Creates a <code>XmlMag</code>.
     *
     * @return XmlMag
     */
    XmlMag createXmlMagWithContext();

    /**
     * Creates a <code>XmlReported</code>.
     *
     * @return XmlReported
     */
    XmlReported createXmlReportedWithContext();

    /**
     * Creates a <code>XmlDiscarded</code>.
     *
     * @return XmlDiscarded
     */
    XmlDiscarded createXmlDiscardedWithContext();

    /**
     * Creates a <code>XmlPreempted</code>.
     *
     * @return XmlPreempted
     */
    XmlPreempted createXmlPreemptedWithContext();

    /**
     * Creates a <code>XmlImported</code>.
     *
     * @return XmlImported
     */
    XmlImported createXmlImportedWithContext();

    /**
     * Creates a <code>XmlBlending</code>.
     *
     * @return XmlBlending
     */
    XmlBlending createXmlBlendingWithContext();

    /**
     * Creates a <code>XmlPositionRecordHolder</code>.
     *
     * @return XmlPositionRecordHolder
     */
    XmlPositionRecordHolder createXmlPositionRecordHolderWithContext();

    /**
     * Creates a <code>XmlPositionRecord</code>.
     *
     * @return XmlPositionRecord
     */
    XmlPositionRecord createXmlPositionRecordWithContext();

    /**
     * Creates a <code>XmlVariabilityHolder</code>.
     *
     * @return XmlVariabilityHolder
     */
    XmlVariabilityHolder createXmlVariabilityHolderWithContext();

    /**
     * Creates a <code>XmlVariability</code>.
     *
     * @return XmlVariability
     */
    XmlVariability createXmlVariabilityWithContext();

    /**
     * Creates a <code>XmlConfiguration</code>.
     *
     * @return XmlConfiguration
     */
    XmlConfiguration createXmlConfigurationWithContext();

    /**
     * Creates a <code>XmlCatalogPath</code>.
     *
     * @return XmlCatalogPath
     */
    XmlCatalogPath createXmlCatalogPathWithContext();

    /**
     * Creates a <code>XmlImageConfig</code>.
     *
     * @return XmlImageConfig
     */
    XmlImageConfig createXmlImageConfigWithContext();

    /**
     * Creates a <code>XmlPixy</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPixy
     */
    XmlPixy createXmlPixy(Document doc);

    /**
     * Creates a <code>XmlReport</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlReport
     */
    XmlReport createXmlReport(Document doc);

    /**
     * Creates a <code>XmlSystem</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlSystem
     */
    XmlSystem createXmlSystem(Document doc);

    /**
     * Creates a <code>XmlInformation</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlInformation
     */
    XmlInformation createXmlInformation(Document doc);

    /**
     * Creates a <code>XmlImage</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlImage
     */
    XmlImage createXmlImage(Document doc);

    /**
     * Creates a <code>XmlSize</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlSize
     */
    XmlSize createXmlSize(Document doc);

    /**
     * Creates a <code>XmlExposure</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlExposure
     */
    XmlExposure createXmlExposure(Document doc);

    /**
     * Creates a <code>XmlCenter</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlCenter
     */
    XmlCenter createXmlCenter(Document doc);

    /**
     * Creates a <code>XmlFov</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlFov
     */
    XmlFov createXmlFov(Document doc);

    /**
     * Creates a <code>XmlRotation</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlRotation
     */
    XmlRotation createXmlRotation(Document doc);

    /**
     * Creates a <code>XmlPixelSize</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPixelSize
     */
    XmlPixelSize createXmlPixelSize(Document doc);

    /**
     * Creates a <code>XmlAstrometricError</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlAstrometricError
     */
    XmlAstrometricError createXmlAstrometricError(Document doc);

    /**
     * Creates a <code>XmlDistortionField</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlDistortionField
     */
    XmlDistortionField createXmlDistortionField(Document doc);

    /**
     * Creates a <code>XmlAstrometry</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlAstrometry
     */
    XmlAstrometry createXmlAstrometry(Document doc);

    /**
     * Creates a <code>XmlCatalog</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlCatalog
     */
    XmlCatalog createXmlCatalog(Document doc);

    /**
     * Creates a <code>XmlPhotometry</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPhotometry
     */
    XmlPhotometry createXmlPhotometry(Document doc);

    /**
     * Creates a <code>XmlReversedImage</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlReversedImage
     */
    XmlReversedImage createXmlReversedImage(Document doc);

    /**
     * Creates a <code>XmlSbigImage</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlSbigImage
     */
    XmlSbigImage createXmlSbigImage(Document doc);

    /**
     * Creates a <code>XmlUnofficial</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlUnofficial
     */
    XmlUnofficial createXmlUnofficial(Document doc);

    /**
     * Creates a <code>XmlStarCount</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlStarCount
     */
    XmlStarCount createXmlStarCount(Document doc);

    /**
     * Creates a <code>XmlData</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlData
     */
    XmlData createXmlData(Document doc);

    /**
     * Creates a <code>XmlStar</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlStar
     */
    XmlStar createXmlStar(Document doc);

    /**
     * Creates a <code>XmlRecord</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlRecord
     */
    XmlRecord createXmlRecord(Document doc);

    /**
     * Creates a <code>XmlCoor</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlCoor
     */
    XmlCoor createXmlCoor(Document doc);

    /**
     * Creates a <code>XmlPosition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPosition
     */
    XmlPosition createXmlPosition(Document doc);

    /**
     * Creates a <code>XmlItem</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlItem
     */
    XmlItem createXmlItem(Document doc);

    /**
     * Creates a <code>XmlBatch</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlBatch
     */
    XmlBatch createXmlBatch(Document doc);

    /**
     * Creates a <code>XmlInstruction</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlInstruction
     */
    XmlInstruction createXmlInstruction(Document doc);

    /**
     * Creates a <code>XmlBaseCatalog</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlBaseCatalog
     */
    XmlBaseCatalog createXmlBaseCatalog(Document doc);

    /**
     * Creates a <code>XmlOutput</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlOutput
     */
    XmlOutput createXmlOutput(Document doc);

    /**
     * Creates a <code>XmlInformationHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlInformationHolder
     */
    XmlInformationHolder createXmlInformationHolder(Document doc);

    /**
     * Creates a <code>XmlRecordHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlRecordHolder
     */
    XmlRecordHolder createXmlRecordHolder(Document doc);

    /**
     * Creates a <code>XmlMagRecordHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlMagRecordHolder
     */
    XmlMagRecordHolder createXmlMagRecordHolder(Document doc);

    /**
     * Creates a <code>XmlMagRecord</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlMagRecord
     */
    XmlMagRecord createXmlMagRecord(Document doc);

    /**
     * Creates a <code>XmlMag</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlMag
     */
    XmlMag createXmlMag(Document doc);

    /**
     * Creates a <code>XmlReported</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlReported
     */
    XmlReported createXmlReported(Document doc);

    /**
     * Creates a <code>XmlDiscarded</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlDiscarded
     */
    XmlDiscarded createXmlDiscarded(Document doc);

    /**
     * Creates a <code>XmlPreempted</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPreempted
     */
    XmlPreempted createXmlPreempted(Document doc);

    /**
     * Creates a <code>XmlImported</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlImported
     */
    XmlImported createXmlImported(Document doc);

    /**
     * Creates a <code>XmlBlending</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlBlending
     */
    XmlBlending createXmlBlending(Document doc);

    /**
     * Creates a <code>XmlPositionRecordHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPositionRecordHolder
     */
    XmlPositionRecordHolder createXmlPositionRecordHolder(Document doc);

    /**
     * Creates a <code>XmlPositionRecord</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPositionRecord
     */
    XmlPositionRecord createXmlPositionRecord(Document doc);

    /**
     * Creates a <code>XmlVariabilityHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlVariabilityHolder
     */
    XmlVariabilityHolder createXmlVariabilityHolder(Document doc);

    /**
     * Creates a <code>XmlVariability</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlVariability
     */
    XmlVariability createXmlVariability(Document doc);

    /**
     * Creates a <code>XmlConfiguration</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlConfiguration
     */
    XmlConfiguration createXmlConfiguration(Document doc);

    /**
     * Creates a <code>XmlCatalogPath</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlCatalogPath
     */
    XmlCatalogPath createXmlCatalogPath(Document doc);

    /**
     * Creates a <code>XmlImageConfig</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlImageConfig
     */
    XmlImageConfig createXmlImageConfig(Document doc);

    /**
     * Creates a <code>XmlPixy</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPixy
     */
    XmlPixy createXmlPixyWithContext(Document doc);

    /**
     * Creates a <code>XmlReport</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlReport
     */
    XmlReport createXmlReportWithContext(Document doc);

    /**
     * Creates a <code>XmlSystem</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlSystem
     */
    XmlSystem createXmlSystemWithContext(Document doc);

    /**
     * Creates a <code>XmlInformation</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlInformation
     */
    XmlInformation createXmlInformationWithContext(Document doc);

    /**
     * Creates a <code>XmlImage</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlImage
     */
    XmlImage createXmlImageWithContext(Document doc);

    /**
     * Creates a <code>XmlSize</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlSize
     */
    XmlSize createXmlSizeWithContext(Document doc);

    /**
     * Creates a <code>XmlExposure</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlExposure
     */
    XmlExposure createXmlExposureWithContext(Document doc);

    /**
     * Creates a <code>XmlCenter</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlCenter
     */
    XmlCenter createXmlCenterWithContext(Document doc);

    /**
     * Creates a <code>XmlFov</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlFov
     */
    XmlFov createXmlFovWithContext(Document doc);

    /**
     * Creates a <code>XmlRotation</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlRotation
     */
    XmlRotation createXmlRotationWithContext(Document doc);

    /**
     * Creates a <code>XmlPixelSize</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPixelSize
     */
    XmlPixelSize createXmlPixelSizeWithContext(Document doc);

    /**
     * Creates a <code>XmlAstrometricError</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlAstrometricError
     */
    XmlAstrometricError createXmlAstrometricErrorWithContext(Document doc);

    /**
     * Creates a <code>XmlDistortionField</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlDistortionField
     */
    XmlDistortionField createXmlDistortionFieldWithContext(Document doc);

    /**
     * Creates a <code>XmlAstrometry</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlAstrometry
     */
    XmlAstrometry createXmlAstrometryWithContext(Document doc);

    /**
     * Creates a <code>XmlCatalog</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlCatalog
     */
    XmlCatalog createXmlCatalogWithContext(Document doc);

    /**
     * Creates a <code>XmlPhotometry</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPhotometry
     */
    XmlPhotometry createXmlPhotometryWithContext(Document doc);

    /**
     * Creates a <code>XmlReversedImage</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlReversedImage
     */
    XmlReversedImage createXmlReversedImageWithContext(Document doc);

    /**
     * Creates a <code>XmlSbigImage</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlSbigImage
     */
    XmlSbigImage createXmlSbigImageWithContext(Document doc);

    /**
     * Creates a <code>XmlUnofficial</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlUnofficial
     */
    XmlUnofficial createXmlUnofficialWithContext(Document doc);

    /**
     * Creates a <code>XmlStarCount</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlStarCount
     */
    XmlStarCount createXmlStarCountWithContext(Document doc);

    /**
     * Creates a <code>XmlData</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlData
     */
    XmlData createXmlDataWithContext(Document doc);

    /**
     * Creates a <code>XmlStar</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlStar
     */
    XmlStar createXmlStarWithContext(Document doc);

    /**
     * Creates a <code>XmlRecord</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlRecord
     */
    XmlRecord createXmlRecordWithContext(Document doc);

    /**
     * Creates a <code>XmlCoor</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlCoor
     */
    XmlCoor createXmlCoorWithContext(Document doc);

    /**
     * Creates a <code>XmlPosition</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPosition
     */
    XmlPosition createXmlPositionWithContext(Document doc);

    /**
     * Creates a <code>XmlItem</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlItem
     */
    XmlItem createXmlItemWithContext(Document doc);

    /**
     * Creates a <code>XmlBatch</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlBatch
     */
    XmlBatch createXmlBatchWithContext(Document doc);

    /**
     * Creates a <code>XmlInstruction</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlInstruction
     */
    XmlInstruction createXmlInstructionWithContext(Document doc);

    /**
     * Creates a <code>XmlBaseCatalog</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlBaseCatalog
     */
    XmlBaseCatalog createXmlBaseCatalogWithContext(Document doc);

    /**
     * Creates a <code>XmlOutput</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlOutput
     */
    XmlOutput createXmlOutputWithContext(Document doc);

    /**
     * Creates a <code>XmlInformationHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlInformationHolder
     */
    XmlInformationHolder createXmlInformationHolderWithContext(Document doc);

    /**
     * Creates a <code>XmlRecordHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlRecordHolder
     */
    XmlRecordHolder createXmlRecordHolderWithContext(Document doc);

    /**
     * Creates a <code>XmlMagRecordHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlMagRecordHolder
     */
    XmlMagRecordHolder createXmlMagRecordHolderWithContext(Document doc);

    /**
     * Creates a <code>XmlMagRecord</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlMagRecord
     */
    XmlMagRecord createXmlMagRecordWithContext(Document doc);

    /**
     * Creates a <code>XmlMag</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlMag
     */
    XmlMag createXmlMagWithContext(Document doc);

    /**
     * Creates a <code>XmlReported</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlReported
     */
    XmlReported createXmlReportedWithContext(Document doc);

    /**
     * Creates a <code>XmlDiscarded</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlDiscarded
     */
    XmlDiscarded createXmlDiscardedWithContext(Document doc);

    /**
     * Creates a <code>XmlPreempted</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPreempted
     */
    XmlPreempted createXmlPreemptedWithContext(Document doc);

    /**
     * Creates a <code>XmlImported</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlImported
     */
    XmlImported createXmlImportedWithContext(Document doc);

    /**
     * Creates a <code>XmlBlending</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlBlending
     */
    XmlBlending createXmlBlendingWithContext(Document doc);

    /**
     * Creates a <code>XmlPositionRecordHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPositionRecordHolder
     */
    XmlPositionRecordHolder createXmlPositionRecordHolderWithContext(Document doc);

    /**
     * Creates a <code>XmlPositionRecord</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlPositionRecord
     */
    XmlPositionRecord createXmlPositionRecordWithContext(Document doc);

    /**
     * Creates a <code>XmlVariabilityHolder</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlVariabilityHolder
     */
    XmlVariabilityHolder createXmlVariabilityHolderWithContext(Document doc);

    /**
     * Creates a <code>XmlVariability</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlVariability
     */
    XmlVariability createXmlVariabilityWithContext(Document doc);

    /**
     * Creates a <code>XmlConfiguration</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlConfiguration
     */
    XmlConfiguration createXmlConfigurationWithContext(Document doc);

    /**
     * Creates a <code>XmlCatalogPath</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlCatalogPath
     */
    XmlCatalogPath createXmlCatalogPathWithContext(Document doc);

    /**
     * Creates a <code>XmlImageConfig</code> by the Document <code>doc</code>.
     *
     * @param doc
     * @return XmlImageConfig
     */
    XmlImageConfig createXmlImageConfigWithContext(Document doc);

    /**
     * Creates a <code>XmlPixy</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPixy
     */
    XmlPixy createXmlPixy(Element element);

    /**
     * Creates a <code>XmlReport</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlReport
     */
    XmlReport createXmlReport(Element element);

    /**
     * Creates a <code>XmlSystem</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlSystem
     */
    XmlSystem createXmlSystem(Element element);

    /**
     * Creates a <code>XmlInformation</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlInformation
     */
    XmlInformation createXmlInformation(Element element);

    /**
     * Creates a <code>XmlImage</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlImage
     */
    XmlImage createXmlImage(Element element);

    /**
     * Creates a <code>XmlSize</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlSize
     */
    XmlSize createXmlSize(Element element);

    /**
     * Creates a <code>XmlExposure</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlExposure
     */
    XmlExposure createXmlExposure(Element element);

    /**
     * Creates a <code>XmlCenter</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlCenter
     */
    XmlCenter createXmlCenter(Element element);

    /**
     * Creates a <code>XmlFov</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlFov
     */
    XmlFov createXmlFov(Element element);

    /**
     * Creates a <code>XmlRotation</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlRotation
     */
    XmlRotation createXmlRotation(Element element);

    /**
     * Creates a <code>XmlPixelSize</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPixelSize
     */
    XmlPixelSize createXmlPixelSize(Element element);

    /**
     * Creates a <code>XmlAstrometricError</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlAstrometricError
     */
    XmlAstrometricError createXmlAstrometricError(Element element);

    /**
     * Creates a <code>XmlDistortionField</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlDistortionField
     */
    XmlDistortionField createXmlDistortionField(Element element);

    /**
     * Creates a <code>XmlAstrometry</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlAstrometry
     */
    XmlAstrometry createXmlAstrometry(Element element);

    /**
     * Creates a <code>XmlCatalog</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlCatalog
     */
    XmlCatalog createXmlCatalog(Element element);

    /**
     * Creates a <code>XmlPhotometry</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPhotometry
     */
    XmlPhotometry createXmlPhotometry(Element element);

    /**
     * Creates a <code>XmlReversedImage</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlReversedImage
     */
    XmlReversedImage createXmlReversedImage(Element element);

    /**
     * Creates a <code>XmlSbigImage</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlSbigImage
     */
    XmlSbigImage createXmlSbigImage(Element element);

    /**
     * Creates a <code>XmlUnofficial</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlUnofficial
     */
    XmlUnofficial createXmlUnofficial(Element element);

    /**
     * Creates a <code>XmlStarCount</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlStarCount
     */
    XmlStarCount createXmlStarCount(Element element);

    /**
     * Creates a <code>XmlData</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlData
     */
    XmlData createXmlData(Element element);

    /**
     * Creates a <code>XmlStar</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlStar
     */
    XmlStar createXmlStar(Element element);

    /**
     * Creates a <code>XmlRecord</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlRecord
     */
    XmlRecord createXmlRecord(Element element);

    /**
     * Creates a <code>XmlCoor</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlCoor
     */
    XmlCoor createXmlCoor(Element element);

    /**
     * Creates a <code>XmlPosition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPosition
     */
    XmlPosition createXmlPosition(Element element);

    /**
     * Creates a <code>XmlItem</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlItem
     */
    XmlItem createXmlItem(Element element);

    /**
     * Creates a <code>XmlBatch</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlBatch
     */
    XmlBatch createXmlBatch(Element element);

    /**
     * Creates a <code>XmlInstruction</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlInstruction
     */
    XmlInstruction createXmlInstruction(Element element);

    /**
     * Creates a <code>XmlBaseCatalog</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlBaseCatalog
     */
    XmlBaseCatalog createXmlBaseCatalog(Element element);

    /**
     * Creates a <code>XmlOutput</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlOutput
     */
    XmlOutput createXmlOutput(Element element);

    /**
     * Creates a <code>XmlInformationHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlInformationHolder
     */
    XmlInformationHolder createXmlInformationHolder(Element element);

    /**
     * Creates a <code>XmlRecordHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlRecordHolder
     */
    XmlRecordHolder createXmlRecordHolder(Element element);

    /**
     * Creates a <code>XmlMagRecordHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlMagRecordHolder
     */
    XmlMagRecordHolder createXmlMagRecordHolder(Element element);

    /**
     * Creates a <code>XmlMagRecord</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlMagRecord
     */
    XmlMagRecord createXmlMagRecord(Element element);

    /**
     * Creates a <code>XmlMag</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlMag
     */
    XmlMag createXmlMag(Element element);

    /**
     * Creates a <code>XmlReported</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlReported
     */
    XmlReported createXmlReported(Element element);

    /**
     * Creates a <code>XmlDiscarded</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlDiscarded
     */
    XmlDiscarded createXmlDiscarded(Element element);

    /**
     * Creates a <code>XmlPreempted</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPreempted
     */
    XmlPreempted createXmlPreempted(Element element);

    /**
     * Creates a <code>XmlImported</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlImported
     */
    XmlImported createXmlImported(Element element);

    /**
     * Creates a <code>XmlBlending</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlBlending
     */
    XmlBlending createXmlBlending(Element element);

    /**
     * Creates a <code>XmlPositionRecordHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPositionRecordHolder
     */
    XmlPositionRecordHolder createXmlPositionRecordHolder(Element element);

    /**
     * Creates a <code>XmlPositionRecord</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPositionRecord
     */
    XmlPositionRecord createXmlPositionRecord(Element element);

    /**
     * Creates a <code>XmlVariabilityHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlVariabilityHolder
     */
    XmlVariabilityHolder createXmlVariabilityHolder(Element element);

    /**
     * Creates a <code>XmlVariability</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlVariability
     */
    XmlVariability createXmlVariability(Element element);

    /**
     * Creates a <code>XmlConfiguration</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlConfiguration
     */
    XmlConfiguration createXmlConfiguration(Element element);

    /**
     * Creates a <code>XmlCatalogPath</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlCatalogPath
     */
    XmlCatalogPath createXmlCatalogPath(Element element);

    /**
     * Creates a <code>XmlImageConfig</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlImageConfig
     */
    XmlImageConfig createXmlImageConfig(Element element);

    /**
     * Creates a <code>XmlPixy</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPixy
     */
    XmlPixy createXmlPixyWithContext(Element element);

    /**
     * Creates a <code>XmlReport</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlReport
     */
    XmlReport createXmlReportWithContext(Element element);

    /**
     * Creates a <code>XmlSystem</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlSystem
     */
    XmlSystem createXmlSystemWithContext(Element element);

    /**
     * Creates a <code>XmlInformation</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlInformation
     */
    XmlInformation createXmlInformationWithContext(Element element);

    /**
     * Creates a <code>XmlImage</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlImage
     */
    XmlImage createXmlImageWithContext(Element element);

    /**
     * Creates a <code>XmlSize</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlSize
     */
    XmlSize createXmlSizeWithContext(Element element);

    /**
     * Creates a <code>XmlExposure</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlExposure
     */
    XmlExposure createXmlExposureWithContext(Element element);

    /**
     * Creates a <code>XmlCenter</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlCenter
     */
    XmlCenter createXmlCenterWithContext(Element element);

    /**
     * Creates a <code>XmlFov</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlFov
     */
    XmlFov createXmlFovWithContext(Element element);

    /**
     * Creates a <code>XmlRotation</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlRotation
     */
    XmlRotation createXmlRotationWithContext(Element element);

    /**
     * Creates a <code>XmlPixelSize</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPixelSize
     */
    XmlPixelSize createXmlPixelSizeWithContext(Element element);

    /**
     * Creates a <code>XmlAstrometricError</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlAstrometricError
     */
    XmlAstrometricError createXmlAstrometricErrorWithContext(Element element);

    /**
     * Creates a <code>XmlDistortionField</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlDistortionField
     */
    XmlDistortionField createXmlDistortionFieldWithContext(Element element);

    /**
     * Creates a <code>XmlAstrometry</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlAstrometry
     */
    XmlAstrometry createXmlAstrometryWithContext(Element element);

    /**
     * Creates a <code>XmlCatalog</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlCatalog
     */
    XmlCatalog createXmlCatalogWithContext(Element element);

    /**
     * Creates a <code>XmlPhotometry</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPhotometry
     */
    XmlPhotometry createXmlPhotometryWithContext(Element element);

    /**
     * Creates a <code>XmlReversedImage</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlReversedImage
     */
    XmlReversedImage createXmlReversedImageWithContext(Element element);

    /**
     * Creates a <code>XmlSbigImage</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlSbigImage
     */
    XmlSbigImage createXmlSbigImageWithContext(Element element);

    /**
     * Creates a <code>XmlUnofficial</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlUnofficial
     */
    XmlUnofficial createXmlUnofficialWithContext(Element element);

    /**
     * Creates a <code>XmlStarCount</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlStarCount
     */
    XmlStarCount createXmlStarCountWithContext(Element element);

    /**
     * Creates a <code>XmlData</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlData
     */
    XmlData createXmlDataWithContext(Element element);

    /**
     * Creates a <code>XmlStar</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlStar
     */
    XmlStar createXmlStarWithContext(Element element);

    /**
     * Creates a <code>XmlRecord</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlRecord
     */
    XmlRecord createXmlRecordWithContext(Element element);

    /**
     * Creates a <code>XmlCoor</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlCoor
     */
    XmlCoor createXmlCoorWithContext(Element element);

    /**
     * Creates a <code>XmlPosition</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPosition
     */
    XmlPosition createXmlPositionWithContext(Element element);

    /**
     * Creates a <code>XmlItem</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlItem
     */
    XmlItem createXmlItemWithContext(Element element);

    /**
     * Creates a <code>XmlBatch</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlBatch
     */
    XmlBatch createXmlBatchWithContext(Element element);

    /**
     * Creates a <code>XmlInstruction</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlInstruction
     */
    XmlInstruction createXmlInstructionWithContext(Element element);

    /**
     * Creates a <code>XmlBaseCatalog</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlBaseCatalog
     */
    XmlBaseCatalog createXmlBaseCatalogWithContext(Element element);

    /**
     * Creates a <code>XmlOutput</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlOutput
     */
    XmlOutput createXmlOutputWithContext(Element element);

    /**
     * Creates a <code>XmlInformationHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlInformationHolder
     */
    XmlInformationHolder createXmlInformationHolderWithContext(Element element);

    /**
     * Creates a <code>XmlRecordHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlRecordHolder
     */
    XmlRecordHolder createXmlRecordHolderWithContext(Element element);

    /**
     * Creates a <code>XmlMagRecordHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlMagRecordHolder
     */
    XmlMagRecordHolder createXmlMagRecordHolderWithContext(Element element);

    /**
     * Creates a <code>XmlMagRecord</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlMagRecord
     */
    XmlMagRecord createXmlMagRecordWithContext(Element element);

    /**
     * Creates a <code>XmlMag</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlMag
     */
    XmlMag createXmlMagWithContext(Element element);

    /**
     * Creates a <code>XmlReported</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlReported
     */
    XmlReported createXmlReportedWithContext(Element element);

    /**
     * Creates a <code>XmlDiscarded</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlDiscarded
     */
    XmlDiscarded createXmlDiscardedWithContext(Element element);

    /**
     * Creates a <code>XmlPreempted</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPreempted
     */
    XmlPreempted createXmlPreemptedWithContext(Element element);

    /**
     * Creates a <code>XmlImported</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlImported
     */
    XmlImported createXmlImportedWithContext(Element element);

    /**
     * Creates a <code>XmlBlending</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlBlending
     */
    XmlBlending createXmlBlendingWithContext(Element element);

    /**
     * Creates a <code>XmlPositionRecordHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPositionRecordHolder
     */
    XmlPositionRecordHolder createXmlPositionRecordHolderWithContext(Element element);

    /**
     * Creates a <code>XmlPositionRecord</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlPositionRecord
     */
    XmlPositionRecord createXmlPositionRecordWithContext(Element element);

    /**
     * Creates a <code>XmlVariabilityHolder</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlVariabilityHolder
     */
    XmlVariabilityHolder createXmlVariabilityHolderWithContext(Element element);

    /**
     * Creates a <code>XmlVariability</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlVariability
     */
    XmlVariability createXmlVariabilityWithContext(Element element);

    /**
     * Creates a <code>XmlConfiguration</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlConfiguration
     */
    XmlConfiguration createXmlConfigurationWithContext(Element element);

    /**
     * Creates a <code>XmlCatalogPath</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlCatalogPath
     */
    XmlCatalogPath createXmlCatalogPathWithContext(Element element);

    /**
     * Creates a <code>XmlImageConfig</code> by the Element <code>element</code>.
     *
     * @param element
     * @return XmlImageConfig
     */
    XmlImageConfig createXmlImageConfigWithContext(Element element);

    /**
     * Creates a <code>XmlPixy</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPixy
     */
    XmlPixy createXmlPixy(RStack stack);

    /**
     * Creates a <code>XmlReport</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlReport
     */
    XmlReport createXmlReport(RStack stack);

    /**
     * Creates a <code>XmlSystem</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlSystem
     */
    XmlSystem createXmlSystem(RStack stack);

    /**
     * Creates a <code>XmlInformation</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlInformation
     */
    XmlInformation createXmlInformation(RStack stack);

    /**
     * Creates a <code>XmlImage</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlImage
     */
    XmlImage createXmlImage(RStack stack);

    /**
     * Creates a <code>XmlSize</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlSize
     */
    XmlSize createXmlSize(RStack stack);

    /**
     * Creates a <code>XmlExposure</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlExposure
     */
    XmlExposure createXmlExposure(RStack stack);

    /**
     * Creates a <code>XmlCenter</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlCenter
     */
    XmlCenter createXmlCenter(RStack stack);

    /**
     * Creates a <code>XmlFov</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlFov
     */
    XmlFov createXmlFov(RStack stack);

    /**
     * Creates a <code>XmlRotation</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlRotation
     */
    XmlRotation createXmlRotation(RStack stack);

    /**
     * Creates a <code>XmlPixelSize</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPixelSize
     */
    XmlPixelSize createXmlPixelSize(RStack stack);

    /**
     * Creates a <code>XmlAstrometricError</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlAstrometricError
     */
    XmlAstrometricError createXmlAstrometricError(RStack stack);

    /**
     * Creates a <code>XmlDistortionField</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlDistortionField
     */
    XmlDistortionField createXmlDistortionField(RStack stack);

    /**
     * Creates a <code>XmlAstrometry</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlAstrometry
     */
    XmlAstrometry createXmlAstrometry(RStack stack);

    /**
     * Creates a <code>XmlCatalog</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlCatalog
     */
    XmlCatalog createXmlCatalog(RStack stack);

    /**
     * Creates a <code>XmlPhotometry</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPhotometry
     */
    XmlPhotometry createXmlPhotometry(RStack stack);

    /**
     * Creates a <code>XmlReversedImage</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlReversedImage
     */
    XmlReversedImage createXmlReversedImage(RStack stack);

    /**
     * Creates a <code>XmlSbigImage</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlSbigImage
     */
    XmlSbigImage createXmlSbigImage(RStack stack);

    /**
     * Creates a <code>XmlUnofficial</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlUnofficial
     */
    XmlUnofficial createXmlUnofficial(RStack stack);

    /**
     * Creates a <code>XmlStarCount</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlStarCount
     */
    XmlStarCount createXmlStarCount(RStack stack);

    /**
     * Creates a <code>XmlData</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlData
     */
    XmlData createXmlData(RStack stack);

    /**
     * Creates a <code>XmlStar</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlStar
     */
    XmlStar createXmlStar(RStack stack);

    /**
     * Creates a <code>XmlRecord</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlRecord
     */
    XmlRecord createXmlRecord(RStack stack);

    /**
     * Creates a <code>XmlCoor</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlCoor
     */
    XmlCoor createXmlCoor(RStack stack);

    /**
     * Creates a <code>XmlPosition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPosition
     */
    XmlPosition createXmlPosition(RStack stack);

    /**
     * Creates a <code>XmlItem</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlItem
     */
    XmlItem createXmlItem(RStack stack);

    /**
     * Creates a <code>XmlBatch</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlBatch
     */
    XmlBatch createXmlBatch(RStack stack);

    /**
     * Creates a <code>XmlInstruction</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlInstruction
     */
    XmlInstruction createXmlInstruction(RStack stack);

    /**
     * Creates a <code>XmlBaseCatalog</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlBaseCatalog
     */
    XmlBaseCatalog createXmlBaseCatalog(RStack stack);

    /**
     * Creates a <code>XmlOutput</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlOutput
     */
    XmlOutput createXmlOutput(RStack stack);

    /**
     * Creates a <code>XmlInformationHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlInformationHolder
     */
    XmlInformationHolder createXmlInformationHolder(RStack stack);

    /**
     * Creates a <code>XmlRecordHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlRecordHolder
     */
    XmlRecordHolder createXmlRecordHolder(RStack stack);

    /**
     * Creates a <code>XmlMagRecordHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlMagRecordHolder
     */
    XmlMagRecordHolder createXmlMagRecordHolder(RStack stack);

    /**
     * Creates a <code>XmlMagRecord</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlMagRecord
     */
    XmlMagRecord createXmlMagRecord(RStack stack);

    /**
     * Creates a <code>XmlMag</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlMag
     */
    XmlMag createXmlMag(RStack stack);

    /**
     * Creates a <code>XmlReported</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlReported
     */
    XmlReported createXmlReported(RStack stack);

    /**
     * Creates a <code>XmlDiscarded</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlDiscarded
     */
    XmlDiscarded createXmlDiscarded(RStack stack);

    /**
     * Creates a <code>XmlPreempted</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPreempted
     */
    XmlPreempted createXmlPreempted(RStack stack);

    /**
     * Creates a <code>XmlImported</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlImported
     */
    XmlImported createXmlImported(RStack stack);

    /**
     * Creates a <code>XmlBlending</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlBlending
     */
    XmlBlending createXmlBlending(RStack stack);

    /**
     * Creates a <code>XmlPositionRecordHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPositionRecordHolder
     */
    XmlPositionRecordHolder createXmlPositionRecordHolder(RStack stack);

    /**
     * Creates a <code>XmlPositionRecord</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPositionRecord
     */
    XmlPositionRecord createXmlPositionRecord(RStack stack);

    /**
     * Creates a <code>XmlVariabilityHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlVariabilityHolder
     */
    XmlVariabilityHolder createXmlVariabilityHolder(RStack stack);

    /**
     * Creates a <code>XmlVariability</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlVariability
     */
    XmlVariability createXmlVariability(RStack stack);

    /**
     * Creates a <code>XmlConfiguration</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlConfiguration
     */
    XmlConfiguration createXmlConfiguration(RStack stack);

    /**
     * Creates a <code>XmlCatalogPath</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlCatalogPath
     */
    XmlCatalogPath createXmlCatalogPath(RStack stack);

    /**
     * Creates a <code>XmlImageConfig</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlImageConfig
     */
    XmlImageConfig createXmlImageConfig(RStack stack);

    /**
     * Creates a <code>XmlPixy</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPixy
     */
    XmlPixy createXmlPixyWithContext(RStack stack);

    /**
     * Creates a <code>XmlReport</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlReport
     */
    XmlReport createXmlReportWithContext(RStack stack);

    /**
     * Creates a <code>XmlSystem</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlSystem
     */
    XmlSystem createXmlSystemWithContext(RStack stack);

    /**
     * Creates a <code>XmlInformation</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlInformation
     */
    XmlInformation createXmlInformationWithContext(RStack stack);

    /**
     * Creates a <code>XmlImage</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlImage
     */
    XmlImage createXmlImageWithContext(RStack stack);

    /**
     * Creates a <code>XmlSize</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlSize
     */
    XmlSize createXmlSizeWithContext(RStack stack);

    /**
     * Creates a <code>XmlExposure</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlExposure
     */
    XmlExposure createXmlExposureWithContext(RStack stack);

    /**
     * Creates a <code>XmlCenter</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlCenter
     */
    XmlCenter createXmlCenterWithContext(RStack stack);

    /**
     * Creates a <code>XmlFov</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlFov
     */
    XmlFov createXmlFovWithContext(RStack stack);

    /**
     * Creates a <code>XmlRotation</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlRotation
     */
    XmlRotation createXmlRotationWithContext(RStack stack);

    /**
     * Creates a <code>XmlPixelSize</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPixelSize
     */
    XmlPixelSize createXmlPixelSizeWithContext(RStack stack);

    /**
     * Creates a <code>XmlAstrometricError</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlAstrometricError
     */
    XmlAstrometricError createXmlAstrometricErrorWithContext(RStack stack);

    /**
     * Creates a <code>XmlDistortionField</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlDistortionField
     */
    XmlDistortionField createXmlDistortionFieldWithContext(RStack stack);

    /**
     * Creates a <code>XmlAstrometry</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlAstrometry
     */
    XmlAstrometry createXmlAstrometryWithContext(RStack stack);

    /**
     * Creates a <code>XmlCatalog</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlCatalog
     */
    XmlCatalog createXmlCatalogWithContext(RStack stack);

    /**
     * Creates a <code>XmlPhotometry</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPhotometry
     */
    XmlPhotometry createXmlPhotometryWithContext(RStack stack);

    /**
     * Creates a <code>XmlReversedImage</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlReversedImage
     */
    XmlReversedImage createXmlReversedImageWithContext(RStack stack);

    /**
     * Creates a <code>XmlSbigImage</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlSbigImage
     */
    XmlSbigImage createXmlSbigImageWithContext(RStack stack);

    /**
     * Creates a <code>XmlUnofficial</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlUnofficial
     */
    XmlUnofficial createXmlUnofficialWithContext(RStack stack);

    /**
     * Creates a <code>XmlStarCount</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlStarCount
     */
    XmlStarCount createXmlStarCountWithContext(RStack stack);

    /**
     * Creates a <code>XmlData</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlData
     */
    XmlData createXmlDataWithContext(RStack stack);

    /**
     * Creates a <code>XmlStar</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlStar
     */
    XmlStar createXmlStarWithContext(RStack stack);

    /**
     * Creates a <code>XmlRecord</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlRecord
     */
    XmlRecord createXmlRecordWithContext(RStack stack);

    /**
     * Creates a <code>XmlCoor</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlCoor
     */
    XmlCoor createXmlCoorWithContext(RStack stack);

    /**
     * Creates a <code>XmlPosition</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPosition
     */
    XmlPosition createXmlPositionWithContext(RStack stack);

    /**
     * Creates a <code>XmlItem</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlItem
     */
    XmlItem createXmlItemWithContext(RStack stack);

    /**
     * Creates a <code>XmlBatch</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlBatch
     */
    XmlBatch createXmlBatchWithContext(RStack stack);

    /**
     * Creates a <code>XmlInstruction</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlInstruction
     */
    XmlInstruction createXmlInstructionWithContext(RStack stack);

    /**
     * Creates a <code>XmlBaseCatalog</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlBaseCatalog
     */
    XmlBaseCatalog createXmlBaseCatalogWithContext(RStack stack);

    /**
     * Creates a <code>XmlOutput</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlOutput
     */
    XmlOutput createXmlOutputWithContext(RStack stack);

    /**
     * Creates a <code>XmlInformationHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlInformationHolder
     */
    XmlInformationHolder createXmlInformationHolderWithContext(RStack stack);

    /**
     * Creates a <code>XmlRecordHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlRecordHolder
     */
    XmlRecordHolder createXmlRecordHolderWithContext(RStack stack);

    /**
     * Creates a <code>XmlMagRecordHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlMagRecordHolder
     */
    XmlMagRecordHolder createXmlMagRecordHolderWithContext(RStack stack);

    /**
     * Creates a <code>XmlMagRecord</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlMagRecord
     */
    XmlMagRecord createXmlMagRecordWithContext(RStack stack);

    /**
     * Creates a <code>XmlMag</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlMag
     */
    XmlMag createXmlMagWithContext(RStack stack);

    /**
     * Creates a <code>XmlReported</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlReported
     */
    XmlReported createXmlReportedWithContext(RStack stack);

    /**
     * Creates a <code>XmlDiscarded</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlDiscarded
     */
    XmlDiscarded createXmlDiscardedWithContext(RStack stack);

    /**
     * Creates a <code>XmlPreempted</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPreempted
     */
    XmlPreempted createXmlPreemptedWithContext(RStack stack);

    /**
     * Creates a <code>XmlImported</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlImported
     */
    XmlImported createXmlImportedWithContext(RStack stack);

    /**
     * Creates a <code>XmlBlending</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlBlending
     */
    XmlBlending createXmlBlendingWithContext(RStack stack);

    /**
     * Creates a <code>XmlPositionRecordHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPositionRecordHolder
     */
    XmlPositionRecordHolder createXmlPositionRecordHolderWithContext(RStack stack);

    /**
     * Creates a <code>XmlPositionRecord</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlPositionRecord
     */
    XmlPositionRecord createXmlPositionRecordWithContext(RStack stack);

    /**
     * Creates a <code>XmlVariabilityHolder</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlVariabilityHolder
     */
    XmlVariabilityHolder createXmlVariabilityHolderWithContext(RStack stack);

    /**
     * Creates a <code>XmlVariability</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlVariability
     */
    XmlVariability createXmlVariabilityWithContext(RStack stack);

    /**
     * Creates a <code>XmlConfiguration</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlConfiguration
     */
    XmlConfiguration createXmlConfigurationWithContext(RStack stack);

    /**
     * Creates a <code>XmlCatalogPath</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlCatalogPath
     */
    XmlCatalogPath createXmlCatalogPathWithContext(RStack stack);

    /**
     * Creates a <code>XmlImageConfig</code> by the Stack <code>stack</code>.
     * This mehtod is supposed to be used internally
     * by the Relaxer system.
     *
     * @param stack
     * @return XmlImageConfig
     */
    XmlImageConfig createXmlImageConfigWithContext(RStack stack);

    /**
     * Creates a <code>RContext</code>.
     *
     * @return RContext
     */
    RContext createRContext();

    /**
     * Creates an array of <code>XmlBlending</code>.
     *
     * @return XmlBlending[]
     */
    XmlBlending[] createArrayXmlBlending(int size);

    /**
     * Creates an array of <code>XmlCatalogPath</code>.
     *
     * @return XmlCatalogPath[]
     */
    XmlCatalogPath[] createArrayXmlCatalogPath(int size);

    /**
     * Creates an array of <code>XmlInformation</code>.
     *
     * @return XmlInformation[]
     */
    XmlInformation[] createArrayXmlInformation(int size);

    /**
     * Creates an array of <code>XmlInstruction</code>.
     *
     * @return XmlInstruction[]
     */
    XmlInstruction[] createArrayXmlInstruction(int size);

    /**
     * Creates an array of <code>XmlItem</code>.
     *
     * @return XmlItem[]
     */
    XmlItem[] createArrayXmlItem(int size);

    /**
     * Creates an array of <code>XmlMagRecord</code>.
     *
     * @return XmlMagRecord[]
     */
    XmlMagRecord[] createArrayXmlMagRecord(int size);

    /**
     * Creates an array of <code>XmlOutput</code>.
     *
     * @return XmlOutput[]
     */
    XmlOutput[] createArrayXmlOutput(int size);

    /**
     * Creates an array of <code>XmlPositionRecord</code>.
     *
     * @return XmlPositionRecord[]
     */
    XmlPositionRecord[] createArrayXmlPositionRecord(int size);

    /**
     * Creates an array of <code>XmlRecord</code>.
     *
     * @return XmlRecord[]
     */
    XmlRecord[] createArrayXmlRecord(int size);

    /**
     * Creates an array of <code>XmlReported</code>.
     *
     * @return XmlReported[]
     */
    XmlReported[] createArrayXmlReported(int size);

    /**
     * Creates an array of <code>XmlStar</code>.
     *
     * @return XmlStar[]
     */
    XmlStar[] createArrayXmlStar(int size);

    /**
     * Creates an array of <code>XmlVariability</code>.
     *
     * @return XmlVariability[]
     */
    XmlVariability[] createArrayXmlVariability(int size);
}
